一、Git安装配置
    1.下载地址：http://git-scm.com/downloads
    2.配置个人的用户名称和电子邮箱地址：
        $ git config --global user.name "username"
        $ git config --global user.email email@163.com
    //如果使用global，则配置所有项目的git，如果在某个特定的项目使用其他名字或电邮，只要去掉--
global选项重新配置就可以，新的设定保存在当前项目的.git/config文件里。//
    3.查看配置信息
        $ git config --list
----------------------------------------------------------------------------------------------

二、Git工作流程
一般工作流程：
    （1）克隆Git资源作为工作目录
    （2）在克隆资源上添加或修改文件
    （3）如果其他人修改了，你可以更新资源
    （4）在提交前查看修改
    （5）在修改完成后，如果发现错误，可以撤回提交再次修改并提交
----------------------------------------------------------------------------------------------

三、Git工作区、缓存区、版本库
（1）工作区
    就是在电脑里能看到的目录
（2）暂存区
    英文叫stage或index。一般存放在“.git目录下”的index文件中。
（3）版本库（仓库）
    工作区有一个隐藏目录.git，这不算工作区，而是Git的版本库。
    我们把文件王Git版本库里添加的时候，是分两步执行的：
    第一步：用git add把文件添加进去，实际上就是把文件修改添加到暂存区；
    第二步：用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。
    因为我们创建Git版本库时，Git自动为我们创建了唯一一个master分支，所以，现在git 
commit就是往master分支上提交更改。
    你可以理解为需要提交的文件修改通通放到暂存区，然后一次性提交暂存区的所有修改。
----------------------------------------------------------------------------------------------

四、Git创建仓库
1.git init
    Git使用git init命令来初始化一个git仓库，Git的很多命令都需要在Git的仓库中运行，所以git 
init是使用Git的第一个命令。
    在执行完git init命令后，Git仓库会生成一个.git目录，该目录包含了资源的所有元数据，其他的项目
目录保持不变。
2.使用方法
（1）使用当前目录作为Git仓库，我们只需要使它初始化：
    $ git init
    执行完该命令后，会在当前目录生成一个.git目录。这个目录是Git来跟踪管理版本库的，没事不要手动
修改这个目录里面的文件。
（2）使用指定目录作为Git仓库：
    $ git init newpro
    初始化后会在newpro目录下出现一个.git目录。所有Git需要的数据和资源都存放在这个目录中。
3.git clone
    使用git clone从现有Git仓库中拷贝项目，命令格式如下：
        $ git clone <repo>
    如果我们需要克隆到指定的目录，可以使用一下命令格式：
        $ git clone <repo> <directory>              //repo：Git仓库    directory：本地目录 //
----------------------------------------------------------------------------------------------

五、Git基本操作
1.git init
    用git init在目录中创建新的Git仓库，你可以在任何时候、任何目录中这么做，完全是本地化的。
        $ git init                      //用ls查看当前目录下所有文件//
2.git clone
    使用git clone拷贝一个Git仓库到本地，让自己能够查看该项目或者进行修改
        $ git clone [url]               //[url]为你想要复制的项目//
    例如：
        $ git clone git@github.com:schacon/simplegit.git   
    默认情况下Git会按照你提供的URL所指示的项目的名称创建你的本地项目目录，通常就是该URL最后一
个/之后的项目名称，可以在该命令之后加上你想要的名字。
    例如：
        $ git clone git@github.com:schacon/simplegit.git mulu2
3.基本快照
    Git的工作就是创建和保存你的项目的快照及之后的快照进行对比。本节将对有创建和提交你的项目的
快照的命令做介绍。
（1）git add
    git add命令可将该文件添加到缓存。
    例如：
        $ git add hellp.py
    或者添加当前目录下所有文件
    例如：
        $ git add .
（2）git status
    查看上次提交之后是否有修改。
    例如：
        $ git status
    上面的代码输出详细的结果，如果加-s参数，输出简短结果
    例如：
        $ git status -s
（3）git diff
    执行git diff来查看执行git status的结果的详细信息。git diff命令显示已写入缓存与已修改但尚未
写入缓存的改动的区别。有以下几个应用，第三条为重点：
    









































